# -*- coding: utf-8 -*-
"""Ass_v4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PGmYhB0iA6L7dWVfX9tgrjoKDJt20avY
"""

###################         Header          ############################
#
# Aluno: Rodolfo Augusto da Silva Arrda
# NUSP: 6381848
#
# Assignment 1 : image generation
#
# SCC0251/5830— Prof. Moacir A. Ponti
# Teaching Assistant: Leo Sampaio Ferraz Ribeiro
#
###################   Funcoes Auxiliares   ############################

## 2 Generating a Synthetic Image

def f(C,F,Q,N,B,S):
  arr = np.zeros((C,C),dtype=float)
  if F == 1:
    for x in np.arange(0,C):
      for y in np.arange(0,C):
        arr[x,y] = (x*y + 2*y) 
  elif F == 2:
    for x in np.arange(0,C):
      for y in np.arange(0,C):
        arr[x,y] = np.abs(np.cos(x/Q) + 2*np.sin(y/Q)) 
  elif F == 3:
    for x in np.arange(0,C):
      for y in np.arange(0,C):
        arr[x,y] = np.abs(3*(x/Q) - np.cbrt(y/Q)) 
  elif F == 4:
    random.seed(S)
    for x in np.arange(0,C):
      for y in np.arange(0,C):
        arr[x,y] = random.random( ) 
  elif F == 5:
    steps = x = y  = 0
    random.seed(S)
    while steps <= 1 + C**2:
      if steps == 0:
        arr[0,0] = 1
        steps += 1
      else:    
        dx = random.randint(-1,1)
        dy = random.randint(-1,1)
        x = (x + dx)%C
        y = (y + dy)%C
        arr[x,y] = 1
        steps += 1

  return((arr - arr.min() )/(arr.max() - arr.min())*65535)


## 3.1 Sampling

def Sampling(f,N):
  if N <= f[0].size:
    arr_samp = np.zeros((N,N),dtype=float)
    passo = np.int(f[0].size / N)
    for x in np.arange(0,N):
      for y in np.arange(0,N):
        arr_samp[x,y] = f[x*passo,y*passo]
    return(arr_samp)
  else:
    print('Dimensão da nova imagem precisa ser menor ou igual a imagem original!')

## 3.2 Quantizing

def quant(f,B):
  
  f = (((f - f.min())/(f.max() - f.min()))*255).astype(np.uint8)
  f = f >> (8-B)
  f = f << (8-B)

  return(f)

#######################################################################  

if __name__ == "__main__":
  import numpy as np
  import random
  import sys

  file = input().rstrip()
  C = int(input())
  F = int(input())
  Q = int(input())
  N = int(input())
  B = int(input())
  S = int(input())

  arr = f(C,F,Q,N,B,S)
  arr_samp = Sampling(arr,N)
  arr_quant = quant(arr_samp,B)

 
  #r = np.load('C:\\Users\\rodol\\Desktop\\dados\\imagens_de_referência\\' + file)
  r = np.load(file)
  RSE = np.round(np.sqrt(np.sum((r-arr_quant)**2)),4)

  # Resultado Esperado
  print(RSE)

	
	
	
